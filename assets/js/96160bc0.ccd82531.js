"use strict";(self.webpackChunkmy_blogs=self.webpackChunkmy_blogs||[]).push([[6424],{8453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>c});var t=s(6540);const o={},l=t.createContext(o);function i(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),t.createElement(l.Provider,{value:e},n.children)}},9145:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"react-js/react-essentials","title":"React Essentials","description":"Components","source":"@site/docs/react-js/react-essentials.md","sourceDirName":"react-js","slug":"/react-js/react-essentials","permalink":"/my-blogs/docs/react-js/react-essentials","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/my-blogs/docs/react-js/intro"},"next":{"title":"React Essentials - Deep Dive","permalink":"/my-blogs/docs/category/react-essentials---deep-dive"}}');var o=s(4848),l=s(8453);const i={sidebar_position:3},c="React Essentials",r={},a=[{value:"Components",id:"components",level:2},{value:"What is a Component in React?",id:"what-is-a-component-in-react",level:3},{value:"Types of Components",id:"types-of-components",level:3},{value:"JSX (JavaScript XML)",id:"jsx-javascript-xml",level:3},{value:"How Components are Used",id:"how-components-are-used",level:3},{value:"Props (Properties)",id:"props-properties",level:3},{value:"State",id:"state",level:3},{value:"Event Handling in Components",id:"event-handling-in-components",level:3},{value:"Component Lifecycle (for Class Components)",id:"component-lifecycle-for-class-components",level:3},{value:"React Fragments",id:"react-fragments",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"react-essentials",children:"React Essentials"})}),"\n",(0,o.jsx)(e.h2,{id:"components",children:"Components"}),"\n",(0,o.jsx)(e.h3,{id:"what-is-a-component-in-react",children:"What is a Component in React?"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"A component is a reusable piece of code that defines part of your UI (like a button, header, form, or list)."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Components can be thought of as building blocks of a React app. They allow you to break down the UI into smaller, more manageable parts."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Components are like functions that return a part of the UI (in the form of JSX)."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"types-of-components",children:"Types of Components"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Functional Component"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"These are simpler components defined using functions."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"They are used for components that don't need to manage complex logic or internal state (though with React hooks, they can now handle state too)."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"function Welcome() {\n    return <h1>Hello, welcome to React!</h1>;\n}   \n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Class Components (Older way):"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Class components were the main way of creating components in React before React Hooks were introduced."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"They are defined using ES6 class syntax and can hold state and lifecycle methods."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"class Welcome extends React.Component {\n    render() {\n        return <h1>Hello, welcome to React!</h1>;\n    }\n}\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Note"}),": Nowadays, functional components are preferred over class components in most cases."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"jsx-javascript-xml",children:"JSX (JavaScript XML)"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"JSX allows you to write HTML-like code inside your JavaScript, which React then transforms into actual HTML."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"JSX makes it easier to define UI elements and write cleaner code."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example of JSX:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"const element = <h1>Hello, world!</h1>;\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"JSX is not mandatory in React, but it's commonly used because it\u2019s more readable and concise."}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"how-components-are-used",children:"How Components are Used"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Once a component is created, it can be rendered into the DOM (browser screen) and reused in other parts of the app."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Parent components can pass props (data) to child components."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:'function Welcome(props) {\n  return <h1>Hello, {props.name}!</h1>;\n}\n\nfunction App() {\n  return <Welcome name="John" />;\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"props-properties",children:"Props (Properties)"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Props are the inputs or arguments that you pass to a component from its parent."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Props allow you to pass data from one component to another (from parent to child)."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Props are read-only, which means the child component cannot change the props it receives from the parent."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:'function Greeting(props) {\n  return <h1>Hello, {props.name}!</h1>;\n}\n\nfunction App() {\n  return <Greeting name="Alice" />;\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"state",children:"State"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"State allows a component to maintain and manage dynamic data that can change over time."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"When the state of a component changes, it re-renders to reflect the new data in the UI."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"State is typically used in components that need to interact with users (e.g., forms, buttons)."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example of using state in a functional component with hooks:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import React, { useState } from 'react';\n\nfunction Counter() {\n  // Declare a state variable named 'count'\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"event-handling-in-components",children:"Event Handling in Components"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"React uses event handlers to capture user interactions, like clicks, typing, and form submissions."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:'function MyButton() {\n  const handleClick = () => {\n    alert("Button clicked!");\n  };\n\n  return <button onClick={handleClick}>Click me</button>;\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"component-lifecycle-for-class-components",children:"Component Lifecycle (for Class Components)"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Each React component has a lifecycle, which includes:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Mounting (when the component is created and inserted into the DOM)."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Updating (when the component\u2019s state or props change)."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Unmounting (when the component is removed from the DOM)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Class components have special methods to handle each of these lifecycle stages, like ",(0,o.jsx)(e.code,{children:"componentDidMount()"})," and ",(0,o.jsx)(e.code,{children:"componentDidUpdate()"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example (for class components):"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"class MyComponent extends React.Component {\n  componentDidMount() {\n    console.log('Component mounted!');\n  }\n\n  render() {\n    return <h1>Hello World</h1>;\n  }\n}\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Note: With functional components, you use React hooks like ",(0,o.jsx)(e.code,{children:"useEffect"})," to handle lifecycle events."]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"react-fragments",children:"React Fragments"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"React Fragments are used to group multiple elements without introducing extra nodes in the DOM."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["You can use either React.Fragment or the shorthand ",(0,o.jsx)(o.Fragment,{children:" "}),"."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Fragments help keep your app\u2019s DOM structure cleaner and more efficient."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"function MyComponent() {\n  return (\n    <>\n      <h1>Title</h1>\n      <p>This is some text</p>\n    </>\n  );\n}\n"})})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);